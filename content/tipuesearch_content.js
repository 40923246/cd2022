var tipuesearch = {"pages": [{'title': 'About', 'text': 'cmsimde_site \n 本學期的協同產品設計實習的倉儲與網頁. \n \n 學號 40923246 蕭仲佑 \n 網站倉儲:  github_40923246_cd2022 \n 網站連結:  嗯對，就是這裡 \n 其他與作者或作業相關資料說明或介紹 \n 無 add \n 心得 \n 等等 我還沒寫完 \n', 'tags': '', 'url': 'About.html'}, {'title': 'online', 'text': '', 'tags': '', 'url': 'online.html'}, {'title': 'W12-1', 'text': '', 'tags': '', 'url': 'W12-1.html'}, {'title': '進度', 'text': '\n', 'tags': '', 'url': '進度.html'}, {'title': 'W1', 'text': '網路問題都是用手機網路解決，所以暫時沒有IPV4、IPV6的問題 \n', 'tags': '', 'url': 'W1.html'}, {'title': 'SSL-VPN', 'text': '\n SSL-VPN連線申請 SSL-VPN服務教學 \n \n 太偷懶很正常，學校都整理完了，當然就直接超連結解決 \n', 'tags': '', 'url': 'SSL-VPN.html'}, {'title': 'CAD安裝配置', 'text': '\n Solidworks 2017 與 2020 版本: \n SW2017 Professional 安裝光碟下載 \xa0 (必須先登入 @gm 帳號後才能下載) \n SW2020 Professional 安裝光碟下載 \xa0 (必須先登入 @gm 帳號後才能下載) \n NX12 版本: \n NX12 安裝光碟下載 \xa0 (必須先登入 @gm 帳號後才能下載) \n NX12 可攜版本下載 \xa0(必須先登入 @gm 帳號後才能下載) \n NX1980 版本: \n compile_copsim_cd2022.7z \xa0(file size: 5 GB, extracted size: 17.3 GB, 包含除了 NX1980 之外的所有課程相關可攜程式套件, 是專門為 \xa0 cd2022 \xa0 課程學員打造的套件). \n portable_python_wcm2022.7z \xa0 (file size: 513 MB, extracted size: 17.3 G, 這是專門為 \xa0 wcm2022 \xa0 課程打造的可攜程式套件, 適合選修學員下載後在任何 Windows 10 中以隨身碟啟動後操作) \n NX2008 版本: \n https://github.com/Bioruebe/UniExtract2 \xa0 可用來解開 \n SiemensNX-2008_wntx64\\nx\\SiemensNX.msi, \n 但必須配合 SiemensNX-2008_wntx64\\nx\\VC_redist.x64.exe 的安裝或解壓縮檔案才能執行. \n 至於要解開\xa0SiemensNX-2008_wntx64\\nx\\VC_redist.x64.exe 中的檔案, \n 可先利用\xa0 https://github.com/wixtoolset/wix3/releases/tag/wix3112rtm \n 中的 wix311-binaries.zip, \n 以 wix311-binaries\\dark.exe vc_redist.x64.exe -x x64-extracted, \n 在 x64-extracted 目錄中取得 \n x64-extracted\\AttachedContainer\\packages\\vcRuntimeMinimum_amd64\\vc_runtimeMinimum_x64.msi 之後, \n 再利用 UniExtract2 解開所需的 dll 檔案後, 再放入 NXBIN 目錄. \n Inventor: \n 請在校園網路, 使用 nfu vpn 或設定系上代理主機, 就可以從 \xa0 https://2019wcm.blogspot.com/2019/07/autodesk-inventor-professional.html \xa0 嘗試下載 autodesk.iso 後安裝 Inventor Professional 版本. \n Onshape: \n 至 \xa0 https://www.onshape.com/en/ \xa0 申請帳號後使用. \n Solvespace: \n 至 \xa0 https://solvespace.com \xa0 下載或從 \xa0 https://github.com/solvespace/solvespace \xa0 下載原始碼, 以可攜程式系統自行編譯後使用. \n', 'tags': '', 'url': 'CAD安裝配置.html'}, {'title': 'W2', 'text': '問題緣起: \n 第二週的任務 啟動源頭 來自課程實際分組時所產生的問題. \n 各班利用 Ethercalc 表單同步輸入 github 帳號與組別時, 將資料存入 \xa0 https://github.com/mdecycu/studlist \xa0 倉儲. \n 經由 Github Pages 設定後, 可由 \xa0 https://mde.tw/studlist/2022spring/2a.txt \xa0 讀取甲班的學員帳號及分組資料 (各欄位以 tab 隔開), 而從 \xa0 https://mde.tw/studlist/2022spring/2b.txt \xa0 則可讀取乙班的學員帳號及分組資料. \n 指定任務: \n 請學員以全球資訊網頁的 URL 讀取各班資料後, 是否能夠以永續便捷的方式取得已經選好組別的 學員學號 、學員 個人倉儲連結 、學員 個人網站 、各組位於學員帳號下的 大組倉儲 以及各學員帳號下各大組的 協同網站 . \n 而針對尚未填入 github 帳號的學員, 以其學號作為其 github 帳號. 針對尚未列出分組序號的學員, 則委由隨機方式編入尚不足 8 名學員的組別, 若各組已經都補滿 8 名學員, 仍餘有尚未分組的學員時, 則採隨機方式從各班第一組依序補入各組後, 分別在個人及大分組的 w2 標題頁面中, 列出各大組與全班的上述要求資料. \n 到了 w4 各班學員分組已經底定, 若採 Brython 方式(全球資訊網前端)將學員資料讀出後進行排序與整合, 可以如 \xa0 https://mde.tw/cd2022_guide/content/Brython.html \xa0 中, 直接在網頁上即時列出與 \xa0 https://mde.tw/studlist/2022spring/2a.txt \xa0 及 \xa0 https://mde.tw/studlist/2022spring/2b.txt \xa0 對應的學員倉儲與網頁連結, 以及各學員帳號下的大組同步倉儲與網頁連結. \n 接下來若要採 CPython (全球資訊網後端或 \xa0 CLI/GUI \xa0 模式)在 Windows 環境中執行運算, 該如何進行? \n', 'tags': '', 'url': 'W2.html'}, {'title': '分組', 'text': '此為 40723217 所做的excell表 \n \n \n \n 學號 \n github帳號 \n 組別 \n github超連結 \n 網頁連結 \n \n \n 40923201 \n 40923201 \n 1 \n 40923201 \n 40923201 \n \n \n 40923205 \n 40923205 \n 1 \n 40923205 \n 40923205 \n \n \n 40923208 \n nfu40923208 \n 1 \n 40923208 \n 40923208 \n \n \n 40923210 \n 40923210 \n 1 \n 40923210 \n 40923210 \n \n \n 40923217 \n 40923217 \n 1 \n 40923217 \n 40923217 \n \n \n 40923230 \n 40923230 \n 1 \n 40923230 \n 40923230 \n \n \n 40923231 \n 40923231 \n 1 \n 40923231 \n 40923231 \n \n \n 40923235 \n 40923235 \n 1 \n 40923235 \n 40923235 \n \n \n 40823215 \n 40823215 \n 2 \n 40823215 \n 40823215 \n \n \n 40923203 \n youshin40923203 \n 2 \n 40923203 \n 40923203 \n \n \n 40923204 \n 40923204 \n 2 \n 40923204 \n 40923204 \n \n \n 40923207 \n 40923207 \n 2 \n 40923207 \n 40923207 \n \n \n 40923209 \n nfu40923209 \n 2 \n 40923209 \n 40923209 \n \n \n 40923213 \n 40923213 \n 2 \n 40923213 \n 40923213 \n \n \n 40923220 \n 40923220 \n 2 \n 40923220 \n 40923220 \n \n \n 40923240 \n 40923240 \n 2 \n 40923240 \n 40923240 \n \n \n 40923206 \n 40923206-1 \n 3 \n 40923206 \n 40923206 \n \n \n 40923224 \n s40923224 \n 3 \n 40923224 \n 40923224 \n \n \n 40923226 \n 40923226 \n 3 \n 40923226 \n 40923226 \n \n \n 40923242 \n 40923242 \n 3 \n 40923242 \n 40923242 \n \n \n 40923245 \n 40923245-1 \n 3 \n 40923245 \n 40923245 \n \n \n 40923247 \n 40923247 \n 3 \n 40923247 \n 40923247 \n \n \n 40923249 \n 40923249-1 \n 3 \n 40923249 \n 40923249 \n \n \n 40923252 \n 40923252 \n 3 \n 40923252 \n 40923252 \n \n \n 40923211 \n a40923211 \n 4 \n 40923211 \n 40923211 \n \n \n 40923218 \n 40923218 \n 4 \n 40923218 \n 40923218 \n \n \n 40923221 \n 40923221 \n 4 \n 40923221 \n 40923221 \n \n \n 40923223 \n 40923223 \n 4 \n 40923223 \n 40923223 \n \n \n 40923227 \n 40923227 \n 4 \n 40923227 \n 40923227 \n \n \n 40923243 \n 40923243 \n 4 \n 40923243 \n 40923243 \n \n \n 40923212 \n 40923212 \n 5 \n 40923212 \n 40923212 \n \n \n 40923229 \n 40923229 \n 5 \n 40923229 \n 40923229 \n \n \n 40923233 \n 40923233 \n 5 \n 40923233 \n 40923233 \n \n \n 40923234 \n 40923234 \n 5 \n 40923234 \n 40923234 \n \n \n 40923237 \n 40923237 \n 5 \n 40923237 \n 40923237 \n \n \n 40923251 \n 40923251 \n 5 \n 40923251 \n 40923251 \n \n \n 40923253 \n 40923253 \n 5 \n 40923253 \n 40923253 \n \n \n 40971220 \n 40971220 \n 5 \n 40971220 \n 40971220 \n \n \n 40723217 \n 40723217 \n 6 \n 40723217 \n 40723217 \n \n \n 40923219 \n nfu40923219 \n 6 \n 40923219 \n 40923219 \n \n \n 40923225 \n 40923225 \n 6 \n 40923225 \n 40923225 \n \n \n 40923232 \n 40923232 \n 6 \n 40923232 \n 40923232 \n \n \n 40923236 \n 40923236 \n 6 \n 40923236 \n 40923236 \n \n \n 40923241 \n 40923241 \n 6 \n 40923241 \n 40923241 \n \n \n 40923246 \n 40923246 \n 6 \n 40923246 \n 40923246 \n \n \n 40923250 \n 40923250 \n 6 \n 40923250 \n 40923250 \n \n \n 40723134 \n 40723134 \n 7 \n 40723134 \n 40723134 \n \n \n 40723136 \n s40723136 \n 7 \n 40723136 \n 40723136 \n \n \n 40732331 \n 40732331 \n 7 \n 40732331 \n 40732331 \n \n \n 40923214 \n 40923214 \n 7 \n 40923214 \n 40923214 \n \n \n 40923216 \n 40923216 \n 7 \n 40923216 \n 40923216 \n \n \n 40923228 \n 40923228 \n 7 \n 40923228 \n 40923228 \n \n \n 40923238 \n 40923238 \n 7 \n 40923238 \n 40923238 \n \n \n 40923248 \n 40923248 \n 7 \n 40923248 \n 40923248 \n \n \n \n', 'tags': '', 'url': '分組.html'}, {'title': 'W3', 'text': '問題緣起: \n w2 完成分組後, 各組即進入利用 NX1980 繪製 uArm 機械手臂的協同設計階段, 其中包括手臂兩側的正齒輪減速機設計, 以及各連桿與組立所需要的其他組件設計等 (完成圖如 \xa0 Onshape 中的 uArm 組立圖 ). \n cd2022_uarm_nx12_imported.7z \n uArm 機械手臂的初步設計目的, 是完成 NX1980 組立圖後, 能轉入 Coppeliasim 環境中進行機電系統組合模擬, 讓操作者透過 \xa0 Custom UIs 介面 操控四個自由度的 uArm 步進伺服馬達. \n 指定任務: \n 這裡 有 38 個比較接近 NX1980 版本功能的教學影片 ( 連結 ), 請以每一學員分配 5 個影片的原則, 由各學員在 w3 標題頁面中, 根據影片中的教學內容, 以 Wink 影片互相對照的方式採 NX1980 執行操作進行整理, 完成後請將所負責的 Wink 教學影片嵌入個人與大分組的 w3 標題頁面中. \n w4 各班上課時段前 , 請各小組與大組成員分別開會討論後, 採協同設計流程執行上述任務, 並準備在 w4 上課時段中直接利用網頁簡報呈現各大組的執行流程與結果. \n', 'tags': '', 'url': 'W3.html'}, {'title': '組內分組紀錄', 'text': '\u3000\u3000請以每一學員分配 5 個影片的原則, 由各學員在 w3 標題頁面中, 根據影片中的教學內容, 以 Wink 影片互相對照的方式採 NX1980 執行操作進行整理, 完成後請將所負責的 Wink 教學影片嵌入個人與大分組的 w3 標題頁面中. \n \n 40923250 1-5 \n 40923241 6-10 \n 40923219 11-15 \n 40923225 16-20 \n 40923246\xa021-25 \n 40923232 26-30 \n 40923236 31-35 \n 40723217 36-38 \n \n \u3000\u3000分配的基本就是這樣，因為全影片為全英文，請各位進行翻譯後，用錄音或者直接下載該作者影片進行上中文字幕的部分，希望每周以每人一部影片翻譯進行。 \n \u3000\u3000翻譯好的部分請輸入在組內倉儲自己的txt檔案內部，並且私密我或者在這裡@我進行pull request的合併  \n \u3000\u3000因為github協同除文字外的檔案過於困難，我這裡採用上傳檔案至自己的google雲端硬碟，利用共用分享的方式讓組長(也就是我)下載 \n \u3000\u3000 懶人包 :影片網址點進去，找到自己的翻譯內容，翻譯，然後為影片上字幕，或者用任何方式記錄下來。之後用雲端硬碟共享給我。(之後我會把他們丟到小組倉儲內) \n', 'tags': '', 'url': '組內分組紀錄.html'}, {'title': '組內分組紀錄2', 'text': '40923232 你的30交給 40723217 喔 \n \n @everyone  因為 error 400關係，決定重新創一個倉儲，目前已經更新完成 \n 之後各位需要重新fork以及更改內容，然後交給我合併 -w-a \n https://github.com/40723217/cd2022bg6 \n \n', 'tags': '', 'url': '組內分組紀錄2.html'}, {'title': 'W4', 'text': '嗯 \n fork  大組倉儲，到自己 倉儲 \n git clone 大組倉儲的資料夾 \n git clone --recurse-submodules https://github.com/40923246/cd2022bg6 \n 之後 create new file ，創建自己的  40923246.txt  檔案 \n 之後 pull request 回大組 \n', 'tags': '', 'url': 'W4.html'}, {'title': 'W5', 'text': '逆向更新大組內容方法 \n 施工中... \n', 'tags': '', 'url': 'W5.html'}, {'title': 'W6', 'text': '利用 Leo Editor 編輯 config/pelican.leo 網誌檔案 \n W6 任務 \n w6_40923246  2022 Spring CD 課程 \n', 'tags': '', 'url': 'W6.html'}, {'title': 'blog目前能研究出來的東西', 'text': '', 'tags': '', 'url': 'blog目前能研究出來的東西.html'}, {'title': 'W7', 'text': '在blog區域加入一個Slug: w7_summary 的工作摘要說明 \n 請各大組在摘要網誌中回答下列問題: \n \n 如何集結各大組組員在各週所完成的工作進度? \n 為何要在大組倉儲中建立 Reveal 投影片與 Pelican Blog? ( git blame 用法 ) \n 可以利用 Leo Editor 延續開發  scarysim  程式功能嗎? (與  VScode  比較, 或者直接在 VScode 中使用 Leo Editor,  leointeg ) \n \n W7 \n', 'tags': '', 'url': 'W7.html'}, {'title': 'W8', 'text': '任務一: 請依照下列步驟編譯 simExtMtb plugin 專案: \n w7_project.7z \n 編譯  simExtMtb  plugin: \n 針對 simExtMtb.pro: \n \n CoppeliaSim 4.1.0 原始碼編譯專案  (登入 @gm OneDrive 後下載). \n E:\\downloads\\cop410\\programming\\simExtMTB>qmake -o Makefile simExtMtb.pro \n E:\\downloads\\cop410\\programming\\simExtMTB>mingw32-make -f Makefile.Release \n 在 release 目錄中取得 simExtMtb.dll, 啟動前放入 Coppeliasim 根目錄. \n \n 任務二: 請各組依照下列零件檔案, 將組員分為三組, 分別以 Solvespace, NX (12, 1980 或 2008) 及 Onshape, 完成各零件 工程圖 與 組合圖 後, 將 uarm 組合件轉為  STL 格式後轉入 CoppeliaSim , 並安排以 GUI Slider 方式 控制前三軸作動 . 各組員需將零組件繪製過程與 CoppeliaSim 操控流程及心得, 寫為 Pelican Blog 與 Reveal.js 簡報, 並在期中考週將個人與分組網誌與簡報流程透過 Wink 製作為 mp4 影片嵌入個人與分組網頁, 流程中的 cmsimde H1 頁面命名為  midterm , 而網誌命名為  midterm.html ,  簡報 則採 index.html 命名. \n 查驗項目: \n \n uarm 各零件工程圖 \n uarm 組合圖 \n uarm 組合圖 STL 格式轉入 CoppeliaSim \n GUI slider 控制前三軸作動 \n cmsimde 中第一階頁面, 標題為 midterm \n 網誌名稱為 midterm.html \n 流程與心得簡報 \n \n', 'tags': '', 'url': 'W8.html'}, {'title': 'W9 期中考週', 'text': '跳過 \n', 'tags': '', 'url': 'W9 期中考週.html'}, {'title': 'W10', 'text': '', 'tags': '', 'url': 'W10.html'}, {'title': 'w10_block_ui', 'text': '', 'tags': '', 'url': 'w10_block_ui.html'}, {'title': 'w10_nx_integ', 'text': '', 'tags': '', 'url': 'w10_nx_integ.html'}, {'title': 'w10_ssh', 'text': '', 'tags': '', 'url': 'w10_ssh.html'}, {'title': 'W11', 'text': 'w11-1 任務: \n 請各組組員在第一節課堂時段, 以每兩人一小組的方式, 在組長帳號下的分組倉儲中的同一網頁 (標題為 w11s1 ~w11s4) 加入個人 w8-w10 協同設計過程所負責的項目內容與心得. 過程中請參考下列 Wink 影片解決可能產生的衝突, 最後並將 git pull 至 acp 的操作過程, 建立 Wink 影片後, 以組員為單位嵌入個人負責的協同網頁中. \n w11-2 任務: \n \n 請自行搜尋 STL 檔案中的 ASCII 與 Binary 格式, 舉例說明這兩種零件檔案格式如何定義? \n 請利用 MTB 機械手臂中的 Link2 零件檔案為例, 分別在 Solvespace、NX 與 Onshape 中建立 Link2 零件檔案後, 分別以 Binary 與 ASCII 格式轉出 STL 檔案, 若轉出的 STL 為 Binary 格式, 則請設法以 Python 程式轉為 ASCII 格式, 反之, 若轉出的 STL 為 ASCII 格式, 也請設法以 Python 程式轉為 Binary 格式. \n 請試著將 Link2 零件檔案轉入 Coppeliasim 後, 分別以兩種 XML 格式轉出, 並以 Leo Editor 導入後比較其內容差異. CoppeliaSim 兩種 XML 格式中的 tags \n \n', 'tags': '', 'url': 'W11.html'}, {'title': 'W12-2', 'text': '各分組在執行 \xa0 w8 任務 之後, 請回答下列問題: \n \n cd2022_uarm_nx12_imported.7z \xa0 中, 若計入重複引用的零件, 總數有多少? 請列出組成此一 uarm 機械手臂所需的 BOM 列表. \n 若不計入重複引用的零件, 總數有多少? 請列出各零件名稱. \n 當執行機械手臂的設計過程中, 若已知各零件所擬採用的零件材料密度, 請問此一設計中的 uarm 機械手臂的淨重量為多少? ( uArm-Swift-Specifications.pdf ) \n 當執行機械手臂設計與製程規劃時, 若已知各零件擬採行的製造程序、取得方法與所需時間及成本, 請問此一設計中的 uarm 機械手臂, 該如何計算一定數量需求下, 需花費多少時間? 如何計算成本? \n \n', 'tags': '', 'url': 'W12-2.html'}, {'title': 'W13', 'text': '登入 \xa0 onedrive \xa0 後, 觀看課程教學影片: \n 1.\xa0 cd2022_w13_2a_part1.mp4 \xa0(多版次 NX 近端環境設定, CoppeliaSim batch 啟動, 線上表單) \n cd2022_start_batch_files.7z \xa0(影片中提及的啟動批次檔案) \n 2.\xa0 cd2022_w13_2a_part2.mp4 \xa0(在 uArm Robot 與 MTB Robot 末端加上 Suction pad 控制程式, 配置 Force sensor 的關鍵重點說明) \n Force sensor \n Designing dynamic simulations \n 3.\xa0 cd2022_w13_2a_part3.mp4 \xa0(Leo Editor 遞迴解讀程式碼說明, CoppeliaSim 4.3.0 Python scripting 環境設定說明) \n Leo Editor cd2022 template.leo \n 在 CoppeliaSim 4.3.0 中解譯 Python scripts 設定: \n C:\\CoppeliaSimEdu_4.3.0_rev3\\system\\usrset.txt \n 4. \xa0 cd2022_w13_2b_part1.mp4 \xa0 (NX 與 CoppeliaSim 整合應用項目說明) \n 5. \xa0 cd2022_w13_2b_part2.mp4 \xa0 (uArm 主體零件工程圖取尺寸流程說明) \n 6. \xa0 cd2022_w13_2b_part3.mp4 \xa0 (說明如何在線上讀取各學員每週任務進度) \n check_cd2022_page.py \n 7. \xa0 NX 與 CoppeliaSim 整合 \n mtb_nx.7z', 'tags': '', 'url': 'W13.html'}, {'title': '零件檔', 'text': '', 'tags': '', 'url': '零件檔.html'}, {'title': 'W14', 'text': '\n 2b_w14_part1.mp4 \xa0 (說明如何利用 Leo Editor 與 Python 編寫 CoppeliaSim 場景中的控制程式, \xa0 w14_copsim_py_leo_ttt.7z ) \n 2b_w14_part2.mp4 \xa0 (說明如何利用 Lua 編寫 MTB robot 機械手臂的控制程式) \n 2b_w14_part3.mp4 \xa0 (說明如何利用 Lua 引入 suctionpad component 執行物件吸取與釋放) \n', 'tags': '', 'url': 'W14.html'}, {'title': 'W15', 'text': 'cd2022_w15_2b_part1.mp4 \xa0 ( Coppeliasim remote API in Python) \n uarm 場景 in IK mode: \xa0 https://www.coppeliarobotics.com/helpFiles/en/inverseKinematicsTutorial.htm \n 目前必須透過程式設定才能使用 IK Dummy 聯立求解. \n Reference: \xa0 https://www.youtube.com/watch?v=o8l-p4DhP7M', 'tags': '', 'url': 'W15.html'}, {'title': 'W16', 'text': 'cd2022_w16_2b_part1.mp4 \xa0 (以下範例的 demo 說明) \n cd2022_w16_2b_part2.mp4 \xa0 (rotating cuboid 與 vision sensor 在 remote API 與網際介面環境下的應用) \n cd2022_w16_2b_part3.mp4 \xa0 (說明 CoppeliaSim 4.3.0 visualization stream 功能應用) \n CoppeliaSim Python remote API 範例: \n 利用 tkinter GUI 介面 slider 控制 uArm 機械手臂: \n w15_uarm_tkinter_control.7z \n \n 解開壓縮檔案. \n 以 CoppeliaSim 4.3.0 rev3 開啟 uarm_nx_tkinter_gui_control_exhaustive.simscene.xml 或 uarm_nx_tkinter_gui_control.ttt 場景後, Start Simulation. \n 以 SciTE 執行 uarm_tkinter_control.py, 可透過網路操控伺服器上的 uArm 機械手臂. \n \n 其中的 uarm_nx_tkinter_gui_control_exhaustive.simscene.xml 可以利用 Leo Editor 解讀, 並透過場景節點進行編輯, 以程式方法配置各節點的參數設定. \n 利用 OpenCV 擷取場景中的 Vision Sensor 串流影像: \n w15_rotating_cuboid.7z \n \n 解開壓縮檔案, 配合 rotating_cuboid.py 中的第 17 行, 修改 coppeliaSim.exe 所在目錄, 程式設定位於 C:/CoppeliaSimEdu_4.3.0_rev3 目錄中. \n 確定 coppeliaSim.exe 位置設定正確後, 以 SciTE 執行 rotating_cuboid.py, 將會以 headless 模式 (無 GUI 介面) 啟動 rotating_cuboid.ttt, 並將其中的兩個 Vision Sensor 串流影像取出播放. \n 操作者按下 p 鍵, 將會暫時 pause 場景模擬. \n 操作者按下 s 鍵, 將會重新啟動場景模擬. \n 操作者按下 e 鍵, 將會關閉 CoppeliaSim 與 Python 並退出模擬系統. \n rotating_cuboid.ttt 中控制 Cuboid 旋轉的程式採 Python scripting 格式編寫. \n \n 在 w15_rotating_cuboid 加入網際 Vision Sensor 串流, 使用者啟動後, 各用戶可以透過瀏覽器擷取場景中的串流影像: \n rotating_cuboid_flask.7z \n \n 解開壓縮檔案, 放入 rotating_cuboid 目錄中. \n 以 SciTE 開啟 rotating_cuboid_flask.py 執行後, 以 http://localhost:5000 擷取 Headless 場景中的影像畫面. \n 利用畫面中的連結選擇 camera1 或 camera2 畫面影像, 也可以利用 Pause 連結暫停模擬, 或以 Restart 連結重啟場景模擬. \n 由於未使用 AJAX 傳遞資料, 執行 camera 畫面切換或連結點擊, 瀏覽器畫面將會 refresh. \n \n', 'tags': '', 'url': 'W16.html'}, {'title': 'Online Exam', 'text': 'uarm_nx_tic_tae_toe_DH.ttt \n \n 已知左側綠色底座的 uArm 機械手臂, 其基座座標原點位於絕對座標 (1.0, 0.25, 0), 啟動模擬後 green_suctionpad_frame 座標原點則位於 (0.22859, 0.26047, 0.36576), 請列出運算式說明, 啟動模擬後 joint1, joint2 與 joint3 分別以逆時針旋轉 5 度後, 求 green_suctionpad_frame 的絕對座標值. \n 已知左側 uarm 前方的紅色方塊頂端中心座標值為 (0.2, 0.4, 0.1), 請列出運算式說明左側 uarm 機械手臂的 joint1, joint2 與 joint3 該如何旋轉才能讓 end effector 的吸盤末端中心點移動至紅色方塊頂端中心? \n \n Reference: \n https://automaticaddison.com/how-to-find-denavit-hartenberg-parameter-tables/ \n https://automaticaddison.com/coding-denavit-hartenberg-tables-using-python/ \n lightweight_active_positioning_compliant_joints_robotic_arm_in_power_lines_inspection.pdf', 'tags': '', 'url': 'Online Exam.html'}, {'title': 'W17', 'text': '', 'tags': '', 'url': 'W17.html'}, {'title': '資料管理', 'text': '一樣什麼都沒放 \n', 'tags': '', 'url': '資料管理.html'}, {'title': 'run_2021', 'text': ' 導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  印出版次與關鍵字程式  \n \n \n \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  Filename:  .py    存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div 作為切入位置  \n \n', 'tags': '', 'url': 'run_2021.html'}, {'title': 'run_fail', 'text': ' 導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  印出版次與關鍵字程式  \n \n \n \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  Filename:  .py    存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div 作為切入位置  \n \n  <script>\n  MathJax = {\n    tex: {inlineMath: [[\'$\', \'$\'], [\'\\(\', \'\\)\']]}\n  };\n  </script>\n  <script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-chtml.js"></script> \n \n', 'tags': '', 'url': 'run_fail.html'}, {'title': '參考範例', 'text': '．cad2021 2b 各學員的 cad2021_hw 網站連結 #  將資料存入  gist,  取其  url \n \n url = "https://gist.githubusercontent.com/mdecourse/b11a88a98655d41055c47f08fe94788f/raw/8a27e6885ee1a5074bcf864d741679afeac796c4/2b_w2_stud_list.txt" #  利用  open()  開啟  url  後 ,  以  readlines()  讀取後可納入數列 data = open(url).readlines() #  檢查資料筆數 ,  第一筆為  title #print(data) #print(len(data)) data = data[1:] #print(data) for i in range(len(data)): \xa0\xa0\xa0 num_github = data[i] \xa0\xa0\xa0 num = num_github.split("\\t")[0] \xa0\xa0\xa0 account = num_github.split("\\t")[1] \xa0\xa0\xa0 if account == "": \xa0\xa0\xa0\xa0\xa0\xa0\xa0 account = num \xa0\xa0\xa0 print("<p><a href=\'https://" + str(account) + ".github.io/cad2021_hw\'>"+ str(num) + "</a>""<a href=\'https://github.com/" + str(account) + "/cad2021_hw\'>"+ str(num) + "</a><p>") \n \n \n ．隨機從 2b 學員名單中取出 10 個網站 \n \n from browser import html from browser import document import random brython_div = document["brython_div"] # 將資料存入 gist, 取其 url url = "https://gist.githubusercontent.com/mdecourse/b11a88a98655d41055c47f08fe94788f/raw/8a27e6885ee1a5074bcf864d741679afeac796c4/2b_w2_stud_list.txt" # 利用 open() 開啟 url 後, 以 readlines() 讀取後可納入數列 data = open(url).readlines() # 檢查資料筆數, 第一筆為 title #print(data) #print(len(data)) data = data[1:] #print(data) # 根據 href 與 content 將 html 元件中的 anchor 插入頁面 def makeLink(href, content):  brython_div <= html.A(content, href=href)  brython_div <= html.BR() # 從學員資料中隨機取出 10 位學員的網頁進行查核 select = 10 random.shuffle(data) data = data[:10] for i in range(len(data)):  num_github = data[i]   num = num_github.split("\\t")[0]  account = num_github.split("\\t")[1]  if account == "":  account = num  content = str(num)  href = "https://"+ str(account) + ".github.io/cad2021_hw"  makeLink(href, content) \n \n', 'tags': '', 'url': '參考範例.html'}, {'title': 'Wink', 'text': '隨便找一位 有上傳wink影片的網站 \n \n 檢視頁面來源 \n \n \n 找一下程式碼的位置 \n Ctrl+F 關鍵字： winkVideoData \n \n \n <script> var winkVideoData = {  dataVersion: 1,  frameRate: 20,  buttonFrameLength: 10,  buttonFrameOffset: 5,  frameStops: {  }, }; </script> <div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname=" ./../cmsimde /static" data-varname="winkVideoData"  height="600" width="1000" > <source src="./../downloads/ SWwrite.mp4 " type="video/mp4"/></video> <div class="winkVideoOverlayClass"></div> <div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button> <div class="winkVideoControlBarProgressLeftClass"></div> <div class="winkVideoControlBarProgressEmptyMiddleClass"></div> <div class="winkVideoControlBarProgressRightClass"></div> <div class="winkVideoControlBarProgressFilledMiddleClass"></div> <div class="winkVideoControlBarProgressThumbClass"></div> </div> <div class="winkVideoControlBarClass"></div> <div class="winkVideoPlayOverlayClass"></div> </div> \n \n \n delete「 ./../cmsimde 」 \n \n 「 height="600" width="1000" 」改適當尺寸 \n 例：「 height="700" width="1100"」 \n \n 「 SWwrite.mp4 」到自己資料夾downloads，找自己.mp4檔名改上去 \n \n \n 例：<source src="./../downloads/「 目前零件.mp4 」" type="video/mp4" /> \n \n 註：黑底白字程式碼 <span style="color: #ffffff;"><span style="background-color: #000000;">想寫文字</span></span> \n', 'tags': '', 'url': 'Wink.html'}, {'title': 'Blog 備份', 'text': 'blog \n \n \n \n \n \n \n \n \n \n CMSimfly 內容管理網誌\n 課程倉儲:  https://github.com/chiamingyen/cmsimfly \n 內容管理:  https://chiamingyen.github.io/cmsimfly/ \n 課程投影片:  https://chiamingyen.github.io/cmsimfly/reveal \n 課程網誌:  https://chiamingyen.github.io/cmsimfly/blog \n \n', 'tags': '', 'url': 'Blog 備份.html'}, {'title': 'blog test', 'text': '40923246 \n ---- \n W1 \n 網路問題都是用手機網路解決，所以暫時沒有IPV4、IPV6的問題 \n W2 \n <a href=https://40923246.github.io/cd2022/content/%E5%88%86%E7%B5%84.html>分組</a> \n W3 \n <a href=https://40923246.github.io/cd2022/content/%E7%B5%84%E5%85%A7%E5%88%86%E7%B5%84%E7%B4%80%E9%8C%84.html>組內分組紀錄</a> \n 40923250 1-5 40923241 6-10 40923219 11-15 40923225 16-20 40923246 21-25 40923232 26-30 40923236 31-35 40723217 36-38 \n W4 \n 嗯<a href=https://github.com/40923246/cd2022bg6>fork</a> \n W5 \n 更新大組內容方法 施工中... \n W6 \n <a href=https://40923246.github.io/cd2022/blog/index.html>blog</a> \n W7 \n W8 \n W9 \n ---- \n 參考範例 \n 黑底白字 <span style="color: #ffffff;"><span style="background-color: #000000;">想寫的文字</span></span> \n 插入連結<a href=https://mde.tw/>想寫的文字</a> \n ---- \n 測試測試 \n \n \n', 'tags': '', 'url': 'blog test.html'}]};